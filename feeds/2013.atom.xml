<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Kevin Richardson</title><link href="http://magically.us/" rel="alternate"></link><link href="http://magically.us/feeds/2013.atom.xml" rel="self"></link><id>http://magically.us/</id><updated>2013-04-15T20:36:00-04:00</updated><entry><title>Items of the Week: April 8, 2013</title><link href="http://magically.us/2013-04-15/iotw-april-8-2013.html" rel="alternate"></link><updated>2013-04-15T20:36:00-04:00</updated><author><name>Kevin Richardson</name></author><id>tag:magically.us,2013-04-15:2013-04-15/iotw-april-8-2013.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href="https://education.10gen.com/courses/10gen/M101P/2013_April/about"&gt;MongoDB for Developers&lt;/a&gt; -- A free MOOC offering an introduction to &lt;a href="http://www.mongodb.org/"&gt;MongoDB&lt;/a&gt; using Python. &lt;a href="http://www.10gen.com/about"&gt;10gen&lt;/a&gt;, the company behind MongoDB, hosts the course on the &lt;a href="http://edx.org/"&gt;EdX platform&lt;/a&gt;. The course has great pacing and doesn't take much time throughout the week to complete.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://http://starlogs.net"&gt;Starlogs&lt;/a&gt; -- This website converts GitHub commit messages into scrolling text à la the introduction to each Star Wars movie. For instance, you may enjoy &lt;a href="http://starlogs.net/#django/django"&gt;Django's Starlogs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shower/shower/"&gt;Shower Presentation Engine&lt;/a&gt; -- An HTML presentation/slideshow engine similar to &lt;a href="http://lab.hakim.se/reveal-js/"&gt;reveal.js&lt;/a&gt;. The project's GitHub page offers &lt;a href="https://github.com/shower/shower/#usage-examples"&gt;numerous examples&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="iotw"></category></entry><entry><title>Items of the Week: April 1, 2013</title><link href="http://magically.us/2013-04-07/iotw-april-1-2013.html" rel="alternate"></link><updated>2013-04-07T20:08:00-04:00</updated><author><name>Kevin Richardson</name></author><id>tag:magically.us,2013-04-07:2013-04-07/iotw-april-1-2013.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.manning.com/rathore/"&gt;Clojure in Action&lt;/a&gt; by Amit Rathore. I've found this book much easier to read and understand than both &lt;a href="http://www.clojurebook.com/"&gt;Clojure Programming&lt;/a&gt; and &lt;a href="http://pragprog.com/book/shcloj/programming-clojure"&gt;Programming Clojure&lt;/a&gt; as it seems to offer a much better high-level explanations of the language and how it fits into the JVM ecosystem. However, I've not yet made significant progress into any of the books (and am quite new with Clojure) so take my thoughts with quite a few grains of salt.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.adobe.com/devnet/html5/articles/angularjs-directives-and-the-computer-science-of-javascript.html"&gt;AngularJS Directives and The Computer Science of JavaScript&lt;/a&gt; -- This article offers a nice introduction to &lt;a href="http://docs.angularjs.org/guide/directive"&gt;AngularJS's directives&lt;/a&gt;, a way to "teach HTML new tricks." In layman's terms, a directive "[…] is a way for you to define a new HTML element or attribute." Angular will then execute the directive's code when the element or attribute is found.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://latentflip.com/imperative-vs-declarative/"&gt;Imperative vs Declarative&lt;/a&gt; -- An explanation of imperative vs. declarative programming paradigms. Imperative programming is telling the machine &lt;em&gt;how&lt;/em&gt; to do something and declarative programmign is telling the machine &lt;em&gt;what&lt;/em&gt; you would like to happen and allowing it to figure out the specific steps. It uses map/reduce functions, SQL, and d3.js to discuss how declarative programming abstracts away the specifics the programmer will focus on while using imperative programming.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.zelda.com/skywardsword/"&gt;The Legend of Zelda: Skyward Sword&lt;/a&gt; -- I am absolutely loving this game except for how it continually reminds the player of the function of items she just picked up…&lt;/li&gt;
&lt;/ul&gt;</summary><category term="iotw"></category></entry><entry><title>Items of the Week: March 25, 2013</title><link href="http://magically.us/2013-03-31/iotw-march-25-2013.html" rel="alternate"></link><updated>2013-03-31T21:19:00-04:00</updated><author><name>Kevin Richardson</name></author><id>tag:magically.us,2013-03-31:2013-03-31/iotw-march-25-2013.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href="http://typedarray.org/javascript-refresh/"&gt;A JavaScript Refresh&lt;/a&gt; -- A lengthy overview of JavaScript and some of its idiosyncrasies broken down into easily digestible sections.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://burakkanber.com/blog/machine-learning-in-other-languages-introduction/"&gt;Machine Learning in JavaScript: Introduction&lt;/a&gt; -- Overviews of the following fundamental machine learning algorithms using JavaScript:  k-nearest-neighbor, k-means clustering, Genetic algorithms, Naive Bayes classifier, Neural network&lt;/li&gt;
&lt;li&gt;&lt;a href="http://usablica.github.com/intro.js/"&gt;Intro.js&lt;/a&gt; -- A small JavaScript library offering "better introductions for websites and features with a step-by-step guide for your projects."&lt;/li&gt;
&lt;li&gt;&lt;a href="http://devgirl.org/2013/03/21/fun-with-angularjs/"&gt;Fun with AngularJS!&lt;/a&gt; -- An overview of AngularJS using &lt;a href="http://devgirl.org/files/MediaExplorer/#/"&gt;an iTunes Media Search application&lt;/a&gt; the author created. The author also has a great list of further resources at the end of her post.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jeffknupp.com/blog/2013/02/14/drastically-improve-your-python-understanding-pythons-execution-model/"&gt;Understanding Python's Execution Model&lt;/a&gt; -- In this article, the author helps "[…] you understand what's happening behind the scenes when you do common things like creating a variable or calling a function" in Python.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world"&gt;The Flask Mega-Tutorial&lt;/a&gt; -- A series of tutorials where the author builds a microblog engine using &lt;a href="http://flask.pocoo.org/"&gt;Flask&lt;/a&gt;, a micro web framework for Python. The tutorials include creating templates and forms, interacting with a database, unit testing the code, etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gdc2013.nintendo.com/"&gt;Nintendo Web Framework&lt;/a&gt; -- "The Nintendo Web Framework is a development environment based on WebKit technologies, supporting application development on the Wii U system using HTML5, JavaScript, and CSS." Although not much information is presently available, I'm pretty excited to see what comes of this framework in the future.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="iotw"></category></entry><entry><title>Items of the Week: March 18, 2013</title><link href="http://magically.us/2013-03-25/iotw-march-18-2013.html" rel="alternate"></link><updated>2013-03-25T16:21:00-04:00</updated><author><name>Kevin Richardson</name></author><id>tag:magically.us,2013-03-25:2013-03-25/iotw-march-18-2013.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.artlogic.com/2013/03/06/angularjs-for-jquery-developers/"&gt;AngularJS for jQuery Developers&lt;/a&gt; -- A very brief introduction to &lt;a href="http://angularjs.org"&gt;AngularJS&lt;/a&gt;. I particularly enjoyed its Dependency Injection overview.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://superherojs.com/"&gt;Superhero.js&lt;/a&gt; -- "[…] a continously updated list of articles that help explain the syntax of JavaScript, how to organize your projects, how to test your code, and what's on the horizon."&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/Effective-JavaScript-Specific-Software-Development/dp/0321812182/"&gt;Effective JavaScript&lt;/a&gt; -- This book offers concise and digestible pieces of advice on JavaScript development. I highly recommend it if you'd like to further your understanding of the language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mikkeren/FizzBuzzEnterpriseEdition"&gt;FizzBuzz Enterprise Edition&lt;/a&gt; -- …yep…&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/How_to_Live_on_24_Hours_a_Day"&gt;How to Live on 24 Hours a Day&lt;/a&gt; -- Advice on how to live and not merely exist.&lt;/li&gt;
&lt;li&gt;Magic: the Gathering &lt;a href="https://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/eventcoverage/gppit13/welcome"&gt;Grand Prix Pittsburgh 2013&lt;/a&gt; -- A stellar event for one of the world's greatest games.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="iotw"></category></entry><entry><title>Items of the Week: March 11, 2013</title><link href="http://magically.us/2013-03-17/iotw-march-11-2013.html" rel="alternate"></link><updated>2013-03-17T12:14:00-04:00</updated><author><name>Kevin Richardson</name></author><id>tag:magically.us,2013-03-17:2013-03-17/iotw-march-11-2013.html</id><summary type="html">&lt;p&gt;I've decided to start creating a weekly post describing the websites or other items I've found interesting over the past week. Although the majority of items will likely be websites (as they are often the most easily accessible kind of items), I may mention books, applications, video games, or anything else.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.trello.com/trello-for-ipad-is-here/"&gt;Trello for iPad is Here!&lt;/a&gt; -- The incredibly useful board- and list-based information management tool now has an iPad application. It looks fantastic but has a few oddities on iPad mini (such as a card's edit description field appearing below the on-screen keyboard).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://davidseah.com/blog/2012/08/trello-again-followup/"&gt;Trello Again:  Followup&lt;/a&gt; -- An examination of &lt;a href="http://davidseah.com/"&gt;David Seah&lt;/a&gt;'s personal Trello workflow. He seems to advocate keeping all personal items on one board so as to not lose track of items spanning multiple boards. Furthermore, I enjoy his idea of prepending unplanned items with a "+" sign.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.thoughtbot.com/"&gt;Thoughtbot&lt;/a&gt;'s &lt;a href="https://github.com/thoughtbot/guides/tree/master/product-management/trello"&gt;Process management with Trello guide&lt;/a&gt; -- Over the past four months, I've been trying to revamp my team's (essentially non-existent) style of project management to something resembling [Kanban](https://en.wikipedia.org/wiki/Kanban_(development) because we serve in an operational role and work on many projects simulataneously. Originally, we followed &lt;a href="https://community.uservoice.com/blog/trello-google-docs-product-management/"&gt;the Trello workflow used by Uservoice&lt;/a&gt; and found it generally worked well. However, I've felt it lacked a good place to note technical improvements/refactorings that had to be made (such as upgrading a site from Django 1.3 to 1.4) as well as a good review process. Thoughtbot's guide to its Trello workflow solves many of the issues I've had with my team's current Trello implementation and seems like it will work much better for my team's structure.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.fogcreek.com/the-trello-tech-stack/"&gt;The Trello Tech Stack&lt;/a&gt; -- Brett Kiefer describes the front-end and back-end technologies used to create Trello.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://omniti.com/seeds/your-code-may-be-elegant"&gt;Your Code May Be Elegant&lt;/a&gt;
 -- "Your code may be elegant, but if it doesn't meet the objectives (be they time or business) it doesn't f***ing work." Although it is interesting and exciting to build the most robust solution possible, it is more important to consider the business contraints of time and money.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://timepiece.inostudio.de/"&gt;Timepiece Rounded&lt;/a&gt; -- An OpenType-font which displays time strings (like 17:23:25) as a clock glyph. Fonts can define &lt;a href="http://alistapart.com/article/the-era-of-symbol-fonts"&gt;custom ligatures&lt;/a&gt;, a sequence of characters, that are replaced with a single glyph.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://java.ociweb.com/mark/clojure/article.html"&gt;Clojure - Functional Programming for the JVM&lt;/a&gt; -- "[…] a fairly comprehensive introduction to the Clojure programming language."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.one-tab.com/"&gt;OneTab&lt;/a&gt; -- A neat Chrome extension that converts all your tabs to a list within a page (and then back again).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://mediaqueri.es"&gt;Media Queries&lt;/a&gt; -- "A collection of inspirational websites using media queries and responsive web design." &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://craphound.com/ftw/"&gt;For the Win&lt;/a&gt; by &lt;a href="http://craphound.com/"&gt;Cory Doctorow&lt;/a&gt; -- A novel in which gold farmers struggle to bring better working conditions to themselves and all workers around the world. This was an incredibly fun and engaging book that will have the reader pondering the conditions of life in third world countries.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="iotw"></category></entry><entry><title>Creating A Pelican-Powered Site on GitHub Pages</title><link href="http://magically.us/2013-02-03/creating-a-pelican-powered-site-on-github-pages.html" rel="alternate"></link><updated>2013-02-03T16:00:00-05:00</updated><author><name>Kevin Richardson</name></author><id>tag:magically.us,2013-02-03:2013-02-03/creating-a-pelican-powered-site-on-github-pages.html</id><summary type="html">&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;As stated in &lt;a href="http://magically.us/2013-01-01/hello-world.html"&gt;my "Hello World" post&lt;/a&gt;, magically.us is created with &lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; &amp;mdash; a static website generator &amp;mdash; and hosted on &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;. Benefits of static websites are abundant. This combination allows one to easily update the look and feel of a website as well as its content while maintaining a complete revision history through the &lt;a href="http://git-scm.com/"&gt;Git version control system&lt;/a&gt;. Static websites are awesome because they allow one to maintain a copy of her content and not worry about the "walled garden" effects of sites like Facebook wherein content can be challenging to export to other platforms. Generators are incredibly useful because they allow one to separate her content from her presentation templates. Because static websites are HTML and related assets, it is incredibly easy to move one's site to other webhosts as is necessary or desired. Another nicety exists in that GitHub Pages also provides the URI &lt;code&gt;http://username.github.com&lt;/code&gt; and optionally allows the user to use her own domain. Static website generators (like Pelican) generally allow one to write content in lightweight markup languages (like &lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/ReStructuredText"&gt;reStructuredText&lt;/a&gt;) that is translated to HTML as necessary.&lt;/p&gt;
&lt;p&gt;This post introduces how I maintain this website and (hopefully) provides the reader a starting place for her own experimentations.&lt;/p&gt;
&lt;h3&gt;Assumptions&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;You're using a Unix-like environment and are comfortable using a command-line terminal and shell. If you're using Windows, you may want to examine my &lt;a href="https://github.com/kfr2/python-web-dev-box"&gt;python web-dev box&lt;/a&gt;, a &lt;a href="http://vagrantup.com"&gt;Vagrant&lt;/a&gt; virtual machine, to provide this environment.&lt;/li&gt;
&lt;li&gt;You have Python, &lt;a href="http://www.virtualenv.org/en/latest/"&gt;virtualenv&lt;/a&gt;, &lt;a href="http://www.doughellmann.com/projects/virtualenvwrapper/"&gt;virtualenvwrapper&lt;/a&gt;, and &lt;a href="http://pypi.python.org/pypi/pip"&gt;pip&lt;/a&gt; installed on your machine.&lt;/li&gt;
&lt;li&gt;You have installed Git and have created a &lt;a href="http://github.com"&gt;GitHub&lt;/a&gt; account. I furthermore assume you have working knowledge of Git. &lt;a href="https://help.github.com/"&gt;GitHub's help pages&lt;/a&gt; may prove useful for many questions you may have.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/kfr2/kfr2.github.com/fork"&gt;Fork my kfr2.github.com repository&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Underneath the repository's settings, rename the forked repository to &lt;code&gt;your_username.github.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open a terminal.&lt;/li&gt;
&lt;li&gt;Clone the repository to your machine with the command &lt;code&gt;git clone https://github.com/your_username/your_username.github.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Make a new virtualenv for the project by running &lt;code&gt;mkvirtualenv your_username.github.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;cd your_username.github.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;setvirtualenvproject&lt;/code&gt; to established &lt;code&gt;your_username.github.com&lt;/code&gt; as the virtualenv's default directory. When you next run &lt;code&gt;workon your_username.github.com&lt;/code&gt; to load the virtualenv, your shell will change its working directory to the &lt;code&gt;your_username.github.com&lt;/code&gt; directory.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;git checkout source&lt;/code&gt; to see the site's source files (rather than its compiled HTML files).&lt;/li&gt;
&lt;li&gt;Install the project's requirements:  &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Configuration&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;mkdir themes&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Download &lt;a href="https://github.com/getpelican/pelican-themes"&gt;a Pelican theme&lt;/a&gt; and place it within a subdirectory of &lt;code&gt;themes&lt;/code&gt;. For instance, you can download &lt;a href="https://github.com/kfr2/pelican-svbtle"&gt;my site's theme&lt;/a&gt; via &lt;code&gt;git clone https://github.com/kfr2/pelican-svbtle.git your_username.github.com/themes/pelican-svbtle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Update the settings within &lt;code&gt;pelicanconf.py&lt;/code&gt; and &lt;code&gt;publishconf.py&lt;/code&gt;. You may find Pelican's &lt;a href="http://docs.getpelican.com/en/3.1.1/settings.html"&gt;settings documentation&lt;/a&gt; helpful.&lt;/li&gt;
&lt;li&gt;Update content within &lt;code&gt;content&lt;/code&gt;'s subdirectories. For instance, you will likely want to delete any entries underneath &lt;code&gt;content/blog&lt;/code&gt; as well as modify &lt;code&gt;content/extra&lt;/code&gt; and &lt;code&gt;content/pages&lt;/code&gt; to your liking.&lt;/li&gt;
&lt;li&gt;If you'd like to serve this site at something other than &lt;code&gt;your_username.github.com&lt;/code&gt;, update &lt;code&gt;content/extra/CNAME&lt;/code&gt; to include the desired domain. See GitHub's "&lt;a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages"&gt;Setting up a custom domain with Pages&lt;/a&gt;" for further instructions.&lt;/li&gt;
&lt;li&gt;If you wish to run a development server to view your site and its changes, run the command &lt;code&gt;make devserver&lt;/code&gt;. The site should be accessible at &lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;. The development server can be stopped with the command &lt;code&gt;./develop_server.sh stop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;When satisfied, commit your changes: &lt;code&gt;git commit -am "A description of your changes."&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Push your source file changes: &lt;code&gt;git push origin source&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;make github&lt;/code&gt; to push your compiled source files to GitHub. You will likely receive an email notification regarding your page's build status.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;General Workflow&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Run &lt;code&gt;workon your_username.github.com&lt;/code&gt; to activate the project's virtualenv.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;python new_post.py&lt;/code&gt; to create a new post.&lt;/li&gt;
&lt;li&gt;Edit the post in your favorite text editor.&lt;/li&gt;
&lt;li&gt;Examine the post in context of your website with &lt;code&gt;make devserver&lt;/code&gt;. Shut the server down with &lt;code&gt;./develop_server.sh stop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;When satisfied with the post, run &lt;code&gt;git commit -am "Message describing the post"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Push the source changes with &lt;code&gt;git push origin source&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Push compiled files to your website with &lt;code&gt;make github&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Interesting Alternatives&lt;/h3&gt;
&lt;p&gt;My suggested workflow may not suit your needs or interests. Indeed, throughout the course of writing this post I realized how tedious it may be to setup a website using the methods outlined above &amp;mdash; especially if one is unfamiliar with Git, GitHub, *nix, or Python. Thus, you may be interested in examining how the alternatives listed below fit your needs.&lt;/p&gt;
&lt;h4&gt;GitHub Pages Automatic Page Generator&lt;/h4&gt;
&lt;p&gt;GitHub allows one to &lt;a href="https://help.github.com/articles/creating-pages-with-the-automatic-generator"&gt;create pages with an automatic generator&lt;/a&gt; for both her user (at &lt;code&gt;http://username.github.com&lt;/code&gt;) and individual projects (at &lt;code&gt;http://username.github.com/project-name&lt;/code&gt;). This could be much less maintenance than a Pelican-based approach as GitHub hosts &lt;a href="https://github.com/mojombo/jekyll"&gt;Jekyll&lt;/a&gt;, the static website generator powering the automatic generator, and runs your site files through it when you push changes to the repository. In this situation, one will not need to have Python and the various Pelican dependencies installed. You may wish to view &lt;a href="http://magically.us/apg-test/"&gt;an example of Automatic Page Generator&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;gist.io&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://gist.io"&gt;gist.io&lt;/a&gt; allows one to create posts via &lt;a href="https://gist.github.com/"&gt;Gists&lt;/a&gt;, a GitHub feature that allows one to easily store snippets of code or text and change them over time. Gist.io's homepage describes how one may use it:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;1&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Create&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;gist&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;Github&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;syntax&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
2&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Note&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;gist&lt;/span&gt; &lt;span class="n"&gt;ID&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;It&lt;/span&gt;’&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;usually&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;longish&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="n"&gt;like&lt;/span&gt; 29388372&lt;span class="p"&gt;.&lt;/span&gt;
3&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;writing&lt;/span&gt; &lt;span class="n"&gt;presented&lt;/span&gt; &lt;span class="n"&gt;nicely&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;gist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gist&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;here&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For reference, see the &lt;a href="http://gist.io/3135754"&gt;gist.io's example post&lt;/a&gt;. This method of content creation is incredibly rapid. However, it is designed for one-off posts as it does not currently provide a method for viewing multiple posts by the same author. If you like this style of content creation and wish gist.io acted more like a regular blog engine (as well as allowed you to customize its appearance), it may be worth forking &lt;a href="https://github.com/idan/gistio"&gt;gist.io's source&lt;/a&gt; into something that links to your gists and hosting it on a service like &lt;a href="http://heroku.com"&gt;Heroku&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Hopefully this article has enlightened you to how you may use a static website generator like Pelican to share your content with the world. No matter which generator you use to convert your writings to web pages, they will function similarly and should all serve to assist you in conveying your messages to the world. May your journeys be fruitful and intriguing.&lt;/p&gt;</summary><category term="meta"></category><category term="github"></category><category term="blogging"></category></entry><entry><title>Hello World</title><link href="http://magically.us/2013-01-01/hello-world.html" rel="alternate"></link><updated>2013-01-01T19:55:00-05:00</updated><author><name>Kevin Richardson</name></author><id>tag:magically.us,2013-01-01:2013-01-01/hello-world.html</id><summary type="html">&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;Good day to you, dear reader!  Welcome to magically.us, the personal website of &lt;a href="http://github.com/kfr2"&gt;Kevin Richardson&lt;/a&gt;, a software engineer and developer of web experiences.  Herein I will write about various things I find interesting as well as any revelations I have while developing different pieces of software or user experiences.  Although I currently work predominantly as a web developer (mostly with the lovely &lt;a href="http://djangoproject.com"&gt;Django&lt;/a&gt; framework), my personal and business work touches upon many facets and technologies.  Thus, my posts will not be strictly related to web development but may be very exploratory in nature.&lt;/p&gt;
&lt;h3&gt;The technology behind this site&lt;/h3&gt;
&lt;p&gt;This site is powered by &lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; -- a static website generator  -- and is &lt;a href="https://github.com/kfr2/kfr2.github.com"&gt;hosted on GitHub&lt;/a&gt; using &lt;a href="http://pages.github.com/"&gt;GitHub pages&lt;/a&gt;.  Content is written in &lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt;, a lightweight markup language that allows one to easily add syntax like headings, anchors, and lists to a page.  I use OSX and &lt;a href="http://mouapp.com/"&gt;Mou&lt;/a&gt;, the "missing Markdown editor for web developers", to develop and write the various content contained on this site.&lt;/p&gt;
&lt;p&gt;If you desire your own personal site, I highly recommend a similar setup as the workflow for adding content to this site is quite easy if you are familiar with GitHub and Python.  If you're not (and desire to setup a similar website), fret not -- I will soon write a post describing how one can setup her own installation of Pelican with GitHub pages.&lt;/p&gt;
&lt;h3&gt;Epilogue&lt;/h3&gt;
&lt;p&gt;Thank you very much for perusing my small corner of the web.  If you already haven't, you may be interested in viewing &lt;a href="/pages/projects.html"&gt;a list of my projects&lt;/a&gt; or &lt;a href="https://github.com/kfr2"&gt;my GitHub account&lt;/a&gt;.  Furthermore, please feel free to contact me using the methods listed in &lt;a href="/humans.txt"&gt;my humans.txt file&lt;/a&gt; as I would love to discuss Life, the Universe, and Everything with you.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pax et bonum: peace and good.&lt;/em&gt;&lt;/p&gt;</summary><category term="meta"></category><category term="github"></category><category term="writing"></category><category term="python"></category></entry></feed>